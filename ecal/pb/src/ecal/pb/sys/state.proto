/* ========================= eCAL LICENSE =================================
 *
 * Copyright (C) 2016 - 2019 Continental Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ========================= eCAL LICENSE =================================
*/

syntax = "proto3";

import "ecal/pb/process.proto";

package eCAL.pb.sys;

message State
{
  message Colour
  {
    uint32                   r               =  1;
    uint32                   g               =  2;
    uint32                   b               =  3;
  }

  enum eActionState 
  {
    NoAction      = 0;
    StartingTasks = 1;
    StoppingTasks = 2;
  }
  
  message Task
  {
    uint32                   id              =  1;  // id from configuration file
    string                   name            =  2;
    string                   host            =  3;  // The configured target host
    ProcessState             state           =  4;
    repeated int32           pids            =  5;  // pid; field is repeated because the task can be started multiple times
  }
  
  message Function
  {
    string                   name            =  1;	// The name of the group / function
    string                   state           =  2;	// The name of the state that is currently active
    repeated Task            tasks           =  3;	// All tasks that are somehow included in this group
    Colour                   colour          =  4;	// The configured color for the currently active group-state
  }
  
  repeated Task              tasks           =  1;  // tasks
  repeated Function          functions       =  2;  // functions
  string                     host            =  3;  // host
  eActionState               action          =  4;  // action
  string                     action_message  =  5;  // message describing the current action
}
